version: '3'

tasks:
  mypy:
    desc: "Run mypy on the project"
    cmds:
      - poetry run mypy give_money_bot --disable-error-code union-attr --no-strict-optional

  lint:
    desc: "Run flake8 on the project"
    cmds:
      - poetry run flake8 give_money_bot

  install:
    desc: "Install dependencies"
    cmds:
      - poetry install

  install-release:
    desc: "Build the release"
    cmds:
      - poetry install --no-dev

  run:
    desc: "Run the bot"
    cmds:
      - poetry run bot

  format:
    desc: "Format code"
    cmds:
      - poetry run isort give_money_bot
      - poetry run black --line-length=120 --target-version=py39 --skip-string-normalization give_money_bot
  
  build-docker:
    desc: "Build container"
    cmds:
      - docker build -t give-money-bot:latest --target production .

  run-docker:
    desc: "Run container"
    cmds:
      - docker run --env-file .env -v $(pwd)/data:/prod/data -it give-money-bot:latest "python -m give_money_bot"

  test-docker:
    desc: "Build and run container with pytest"
    cmds:
      - docker build -t give-money-bot:test --target test .
      - docker run -t --rm --name give_money_bot_test give-money-bot:test

  migrate-up:
    desc: "Migrate database"
    cmds:
      - alembic upgrade head

  migrate-down:
    desc: "Rollback database"
    cmds:
      - alembic downgrade -1

  make-migration:
    desc: "Create a new migration"
    cmds:
      - alembic revision --message="" --autogenerate

  test:
    desc: "Run test"
    cmds:
      - task: test-docker
      - task: lint
      - task: mypy

  patch:
    desc: "Update version with patch"
    vars:
      VERSION:
        sh: "poetry version patch | cut -d' ' -f6"
    cmds:
      - git add pyproject.toml
      - git commit -m "Bump version to {{ .VERSION }}"
      - git tag -a v{{ .VERSION }} -m "Version {{ .VERSION }}"
      - git push origin master --tags

  minor:
    desc: "Update version with patch"
    vars:
      VERSION:
        sh: "poetry version minor | cut -d' ' -f6"
    cmds:
      - git add pyproject.toml
      - git commit -m "Bump version to {{ .VERSION }}"
      - git tag -a v{{ .VERSION }} -m "Version {{ .VERSION }}"
      - git push origin master --tags

  major:
    desc: "Update version with patch"
    vars:
      VERSION:
        sh: "poetry version major | cut -d' ' -f6"
    cmds:
      - git add pyproject.toml
      - git commit -m "Bump version to {{ .VERSION }}"
      - git tag -a v{{ .VERSION }} -m "Version {{ .VERSION }}"
      - git push origin master --tags
